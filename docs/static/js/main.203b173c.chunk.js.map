{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","Error","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","UserFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uKAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAE3B,IAAIA,EACA,MAAM,IAAIC,MAAM,8CAH2B,MAMZC,mBAAS,IANG,mBAM1CC,EAN0C,KAM9BC,EAN8B,KAqBlD,OACC,sBAAMC,SAVc,SAACC,GACfA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BT,GAAe,SAAAU,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKxB,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfd,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,+BCVZG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,0DAE6CC,UAAWH,GAFxD,sDAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGpC,OACO,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDZ,SAACA,GAAc,IAAD,EACdd,mBAAS,CACpCqB,KAAM,GACNa,SAAS,IAHgC,mBAClCC,EADkC,KAC3BC,EAD2B,KAqB1C,OAfAC,qBACC,WACCxB,EAAQC,GAENwB,MAAK,SAACC,GACNH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKd,CAAEpB,IAGIqB,EDlB6BK,CAAe1B,GAAlCa,EAFuB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,KAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEkBtBgB,MAjCf,WAAwB,MAKgBzC,mBAAS,CAAC,KAL1B,mBAKb0C,EALa,KAKD5C,EALC,KAWpB,OACI,qCACI,8CACA,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCnB7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.203b173c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ( { setCategories }) => {\n\n    if(!setCategories){\n        throw new Error('El mÃ©todo set categories es obligatorio')\n    }\n\n\tconst [ inputValue, setInputValue ] = useState('');\n\n\tconst handleInputChange = (e) => {\n\t\tsetInputValue(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories( cats => [ inputValue, ...cats] );\n            setInputValue('');\n        }\n    };\n\n\treturn (\n\t\t<form onSubmit={ handleSubmit }>\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\n\t\t</form>\n\t);\n};\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n\n\n","\n\nexport const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI( category ) }&api_key=1dRyUpqZEsYB7fBtD9jVuc5Ii4Qcf9PC`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ({ title, url }) => {\n\t\n\n\treturn (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n        );\n};\n","import React from 'react'\r\nimport { UserFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images,loading } = UserFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const UserFetchGifs = (category) => {\n\tconst [ state, setState ] = useState({\n\t\tdata: [],\n\t\tloading: true\n\t});\n\n\tuseEffect(\n\t\t() => {\n\t\t\tgetGifs(category)\n\t\t\t\t// .then( imgs => setImages( img ) )\n\t\t\t\t.then((imgs) => {\n\t\t\t\t\tsetState({\n\t\t\t\t\t\t\tdata: imgs,\n\t\t\t\t\t\t\tloading: false\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t});\n\t\t},\n\t\t[ category ]\n\t);\n\n\treturn state;\n};\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nfunction GifExpertApp() {\n\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\n\n\n    const [categories, setCategories] = useState([''])\n\n    // const handleAdd = () => {\n    //     setCategories([...categories,'HunterX'])\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <h3>Busca tus gifs</h3>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map(category =>\n                        <GifGrid \n                        key={category}\n                        category={category} />\n                    )\n                }\n            </ol>\n\n\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}